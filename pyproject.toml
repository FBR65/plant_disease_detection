[project]
name = "plant-disease-detection"
version = "0.1.0"
description = "AI-powered plant disease detection system using deep learning and vision-language models"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # Core Machine Learning (PyTorch-basiert - perfekt fÃ¼r Windows)
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
    "transformers>=4.30.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=1.4.0",
    # Computer Vision
    "pillow>=9.0.0",
    "opencv-python>=4.6.0",
    "albumentations>=1.2.0",
    # Vector Database
    "qdrant-client>=1.1.0",
    # Data Processing
    "pyyaml>=6.0",
    "h5py>=3.7.0",
    "scipy>=1.8.0",
    # Visualization
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.10.0",
    # Web App
    "gradio>=3.35.0",
    "fastapi>=0.100.0",
    # Utilities
    "tqdm>=4.64.0",
    "requests>=2.28.0",
    "ipykernel>=6.29.5",
]

[project.optional-dependencies]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.4.0",
    "ipywidgets>=7.7.0",
]

dev = [
    "pytest>=7.1.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.971",
]

gpu = [
    # PyTorch with CUDA support for Windows (install separately via PyTorch index)
    # Use: uv pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
]

windows = [
    # Windows-specific packages (if needed in future)
]

advanced = [
    "imgaug>=0.4.0",
    "mlflow>=1.28.0",
    "wandb>=0.13.0",
]

deployment = [
    "gunicorn>=20.1.0",
    "docker>=6.0.0",
]

[project.scripts]
train-model = "src.train:main"
run-app = "src.gradio_app:main"
explore-data = "src.data_exploration:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
