# Plant Disease Detection - Umgebungsvariablen Template
# Kopiere diese Datei zu .env und passe die Werte an

# ===== LLM-KONFIGURATION =====
# OpenAI-kompatible API (z.B. Ollama, OpenAI, etc.)

# Basis-URL der API
BASE_URL=http://localhost:11434/v1

# API-Schlüssel (für Ollama: "ollama", für OpenAI: dein echter Key)
API_KEY=ollama

# Modell-Name
MODEL_NAME=granite-code:8b

# Alternative für andere Provider:
# MODEL_NAME=gpt-4o-mini
# MODEL_NAME=llama3:8b
# MODEL_NAME=mistral:7b

# ===== QDRANT-KONFIGURATION =====
# Standardmäßig verwendet das System localhost:6333
# Für Qdrant Cloud oder remote Setup:

# QDRANT_HOST=localhost
# QDRANT_PORT=6333
# QDRANT_API_KEY=your-qdrant-api-key
# QDRANT_URL=https://your-cluster-url.qdrant.tech

# ===== GRADIO-KONFIGURATION =====
# Gradio-App Einstellungen

# Server-Host (0.0.0.0 für externe Zugriffe, 127.0.0.1 nur lokal)
GRADIO_HOST=0.0.0.0

# Server-Port
GRADIO_PORT=7860

# Öffentlicher Link (true/false)
GRADIO_SHARE=false

# ===== LOGGING =====
# Log-Level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Log-Datei (optional)
# LOG_FILE=logs/app.log

# ===== DATASET-PFADE =====
# Pfade können angepasst werden falls nötig

# DATASET_PATH=data/PlantDoc
# MODEL_PATH=models/classification_model
# QDRANT_COLLECTION=plant_disease_embeddings

# ===== PERFORMANCE =====
# Batch-Größen und Performance-Tuning

# Qdrant Batch-Größe für Upload
QDRANT_BATCH_SIZE=25

# CLIP-Modell Batch-Größe
CLIP_BATCH_SIZE=8

# GPU Memory Fraction (0.0-1.0)
GPU_MEMORY_FRACTION=0.8

# ===== DEVELOPMENT =====
# Entwicklungs- und Debug-Einstellungen

# Debug-Modus aktivieren
# DEBUG=true

# Disable LLM für Testing
# DISABLE_LLM=true

# Mock-Daten verwenden
# USE_MOCK_DATA=true
